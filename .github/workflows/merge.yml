name: merge-master

on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md

env:
  SERVICE_NAME: ig
  GIT_SHA_SHORT: $(echo ${{ github.sha }} | cut -c1-7)

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        name: set java and maven cache
        with:
          distribution: 'adopt'
          java-version: '17'
          architecture: x64
          cache: 'maven'
          server-id: MAVEN_SERVER_ID
          server-username: FR_ARTIFACTORY_USER # env variable for username in deploy
          server-password: FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD # env variable for token in deploy

      - name: Get version
        id: get_version
        run: |
          echo "VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )" >> $GITHUB_ENV
          echo "MAVEN_SERVER_COMMUNITY=maven.forgerock.org-community" >> $GITHUB_ENV
        env:
          MAVEN_SERVER_ID: forgerock-private-releases # protected repo id to get the protected dependencies
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}

      - name: Set up snapshot forgerock maven repository
        if: contains( env.VERSION, 'SNAPSHOT')
        run: |
          echo "MAVEN_SERVER_COMMUNITY=maven.forgerock.org-community-snapshots" >> $GITHUB_ENV

      - name: Build maven
        run: |
          mvn clean install
        env:
          MAVEN_SERVER_ID: forgerock-private-releases # protected repo id to get the protected dependencies
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}

      - name: Deploy artifact package
        run: mvn -B deploy -DskipTests -DskipITs -DdockerCompose.skip -Ddockerfile.skip
        env:
          MAVEN_SERVER_ID: ${{ env.MAVEN_SERVER_COMMUNITY }} # community repo to publish the java artifact
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_CREDENTIALS_JSON }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker

      - name: docker build
        run: |
          make docker tag=${{ env.GIT_SHA_SHORT }}
          docker tag eu.gcr.io/${{ secrets.GCR_DEV_REPO }}/securebanking/gate/${{ env.SERVICE_NAME }}:${{ env.GIT_SHA_SHORT }} eu.gcr.io/${{ secrets.GCR_DEV_REPO }}/securebanking/gate/${{ env.SERVICE_NAME }}:latest
          docker push --all-tags eu.gcr.io/${{ secrets.GCR_DEV_REPO }}/securebanking/gate/${{ env.SERVICE_NAME }}

      - name: 'run functional tests'
        uses: codefresh-io/codefresh-pipeline-runner@master
        with:
          args: '-v SERVICE_NAME=${{ env.SERVICE_NAME }}'
        env:
          PIPELINE_NAME: 'ForgeCloud/sbat-infra/service-build'
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          TRIGGER_NAME: github-actions-trigger-gateway
        id: run-pipeline
