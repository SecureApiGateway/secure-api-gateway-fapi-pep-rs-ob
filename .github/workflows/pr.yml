name: pull-request

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - README.md

env:
  PR_NUMBER: pr-${{ github.event.number }}
  SERVICE_NAME: ig

jobs:
  build:
    runs-on: ubuntu-latest
    name: Check PR integrity
    steps:
      - uses: actions/checkout@v3

      # set java and cache
      - uses: actions/setup-java@v3
        id: set_java_maven
        name: set java and maven cache
        with:
          distribution: 'adopt'
          java-version: '17'
          architecture: x64
          cache: 'maven'
          server-id: forgerock-private-releases # protected release repo
          server-username: FR_ARTIFACTORY_USER # env variable for username to authentication protected repo
          server-password: FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD # env variable encrypted password to authentication protected repo

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_CREDENTIALS_JSON }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

        # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker

      - name: Build maven
        run: |
          mvn clean install
        env:
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}

      - name: Build Docker Image
        run: |
          # Create development mode docker image
          make docker tag=$PR_NUMBER env="dev"
          # Create production mode docker image
          make docker tag="$PR_NUMBER-prod"

      - name: Create lowercase Github Username
        id: toLowerCase
        run: echo "GITHUB_USER=$(echo ${{github.actor}} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}
      
      - run: echo "GITHUB_USER set to ${{ env.GITHUB_USER }}"
      
      - name: 'build environment and run functional tests'
        uses: codefresh-io/codefresh-pipeline-runner@master
        with:
          args: '-v TAG=${{ env.PR_NUMBER }} -v SERVICE_NAME=${{ env.SERVICE_NAME }} -v ENVIRONMENT=${{ env.GITHUB_USER }}'
        env:
          PIPELINE_NAME: 'ForgeCloud/sbat-infra/service-build'
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          TRIGGER_NAME: github-actions-trigger-gateway
        id: run-pipeline
