name: pull-request

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - README.md

env:
  PR_NUMBER: pr-${{ github.event.number }}
  SERVICE_NAME: ig

jobs:
  build:
    runs-on: ubuntu-latest
    name: Check PR integrity
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

        # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker

      - name: Setup defaults action java and maven properties
        uses: actions/setup-java@v1
        with:
          java-version: "17"
          architecture: x64
          server-id: forgerock-private-releases # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven2-${{ hashFiles('**/pom.xml') }}

      - name: Build maven
        run: |
          mvn clean install
        env:
          MAVEN_USERNAME: ${{ secrets.FR_ARTIFACTORY_USER }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.FR_ARTIFACTORY_TOKEN }}

      - name: Build Docker Image
        run: |
          make build-docker-ig tag=$PR_NUMBER

      - name: Create lowercase Github Username
        id: toLowerCase
        run: echo "GITHUB_USER=$(echo ${{github.actor}} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}
      
      - run: echo "GITHUB_USER set to ${{ env.GITHUB_USER }}"
      
      - name: 'build environment and run functional tests'
        uses: codefresh-io/codefresh-pipeline-runner@master
        with:
          args: '-v TAG=${{ env.PR_NUMBER }} -v SERVICE_NAME=${{ env.SERVICE_NAME }} -v ENVIRONMENT=${{ env.GITHUB_USER }}'
        env:
          PIPELINE_NAME: 'ForgeCloud/sbat-infra/service-build'
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          TRIGGER_NAME: github-actions-trigger-gateway
        id: run-pipeline
