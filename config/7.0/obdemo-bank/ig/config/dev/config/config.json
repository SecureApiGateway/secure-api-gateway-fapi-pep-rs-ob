{
  "handler": "_router",
  "heap": [
    {
      "name": "_router",
      "type": "Router",
      "config": {
        "scanInterval": "30 seconds",
        "directory": "${openig.configDirectory}/routes",
        "defaultHandler": {
          "type": "DispatchHandler",
          "config": {
            "bindings": [
              {
                "condition": "${request.method == 'GET' and request.uri.path == '/'}",
                "handler": {
                  "type": "WelcomeHandler"
                }
              },
              {
                "condition": "${request.uri.path == '/'}",
                "handler": {
                  "type": "StaticResponseHandler",
                  "config": {
                    "status": 405,
                    "reason": "Method Not Allowed"
                  }
                }
              },
              {
                "handler": {
                  "type": "StaticResponseHandler",
                  "config": {
                    "status": 404,
                    "reason": "Not Found"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "capture",
      "type": "CaptureDecorator",
      "config": {
        "captureEntity": true
      }
    },
    {
      "name": "ReverseProxyHandler",
      "type": "ReverseProxyHandler",
      "capture": [
        "request",
        "response"
      ]
    },
    {
      "name": "JwtSession",
      "type": "JwtSession"
    },
    {
      "name" : "ForgeRockClientHandler",
      "type" : "Chain",
      "config" : {
        "filters" : [ "TransactionIdOutboundFilter" ],
        "handler" : "ClientHandler"
      },
      "capture" : [ "response", "request" ]
    },
    {
      "name" : "AmService-OBIE",
      "type" : "AmService",
      "config" : {
        "url" : "https://&{iam.fqdn}/am",
        "realm" : "/&{am.realm}",
        "ssoTokenHeader" : "&{am.cookie.name}",
        "version" : "6.5.1",
        "agent" : {
          "username" : "ig-agent",
          "passwordSecretId" : "ig.agent.password"
        },
        "secretsProvider": "SystemAndEnvSecretStore-IAM",
        "sessionCache" : {
          "enabled" : false
        },
        "notifications" : {
          "enabled" : false
        }
      }
    },
    {
      "name": "SystemAndEnvSecretStore-IAM",
      "type": "SystemAndEnvSecretStore",
      "config": {
        "format": "PLAIN"
      }
    },
    {
      "name": "TokenRequestHandler",
      "type": "ScriptableHandler",
      "config": {
        "type": "application/x-groovy",
        "args": {
          "userId": "&{ig.idm.user}",
          "password": "&{ig.idm.password}"
        },
        "source": [
          "def newEntity = request.getEntity().toString().replace('grant_type=client_credentials','grant_type=password&username=' + userId + '&password=' + java.net.URLEncoder.encode(password, 'UTF-8'))",
          "request.setEntity(newEntity)",
          "return http.send(context, request)"
        ],
        "clientHandler": "ForgeRockClientHandler"
      }
    },
    {
      "name": "SecretsProvider-AmJWK",
      "type": "SecretsProvider",
      "config": {
        "stores": [
          {
            "type": "JwkSetSecretStore",
            "config": {
              "jwkUrl": "https://&{iam.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/connect/jwk_uri"
            }
          }
        ]
      }
    },
    {
      "name": "SecretsProvider-ASPSP",
      "type": "SecretsProvider",
      "config": {
        "stores": [
          {
            "name":"KeyStoreSecretStore-ASPSP",
            "type": "KeyStoreSecretStore",
            "config": {
              "file": "&{ig.instance.dir}&{aspsp.keystore.path}",
              "storeType": "PKCS12",
              "storePassword": "aspsp.keystore.password",
              "keyEntryPassword": "aspsp.keystore.password",
              "secretsProvider": "SystemAndEnvSecretStore-IAM",
              "mappings": [{
                "secretId": "&{aspsp.jwtsigner.alias}",
                "aliases": [ "&{aspsp.jwtsigner.alias}" ]
              }]
            }
          }
        ]
      }
    },

    {
      "name": "IDMClientHandler",
      "type": "Chain",
      "capture": "all",
      "config": {
        "filters": [
          {
            "type": "ClientCredentialsOAuth2ClientFilter",
            "config": {
              "clientId": "&{ig.client.id}",
              "clientSecretId": "ig.client.secret",
              "secretsProvider": "SystemAndEnvSecretStore-IAM",
              "tokenEndpoint": "https://&{iam.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/access_token",
              "scopes": [
                "fr:idm:*"
              ],
              "handler": "TokenRequestHandler"
            }
          }
        ],
        "handler": "ForgeRockClientHandler"
      }
    },
    {
      "name": "AuditService-OB-Route",
      "type": "AuditService",
      "config": {
        "config": {
          "filterPolicies": {
            "field": {
              "includeIf": [
                "/access/http/request/headers/x-fapi-interaction-id"
              ]
            }
          }
        },
        "eventHandlers": [
          {
            "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
            "config": {
              "name": "jsonstdout",
              "elasticsearchCompatible": false,
              "topics": [
                "access"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "AuditService-OB-Consent",
      "type": "AuditService",
      "config": {
        "config": {

        },
        "eventHandlers": [
          {
            "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
            "config": {
              "name": "jsonstdout",
              "elasticsearchCompatible": false,
              "topics": [
                "ObConsentTopic"
              ]
            }
          }
        ]
      }
    }

  ],
  "monitor": true
}
