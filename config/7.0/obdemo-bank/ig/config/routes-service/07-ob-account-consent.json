{
  "name" : "OB RS Account Consent",
  "baseURI" : "https://&{am.server.fqdn}",
  "condition" : "${matches(request.uri.path, '^/rs/openbanking/v3.1/account-access-consents')}",
"heap" : [ {
    "name" : "ReverseProxyHandler",
    "type" : "ReverseProxyHandler",
    "capture" : [ "response", "request" ]
  }, {
    "name" : "capture",
    "type" : "CaptureDecorator",
    "config" : {
      "captureEntity" : true,
      "captureContext" : true
    }
  }
],

  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "name" : "HeaderFilter-AddResponseHeaders",
          "type" : "HeaderFilter",
          "config" : {
            "messageType" : "RESPONSE",
            "remove" : [ "Location", "Set-Cookie", "Server", "Strict-Transport-Security" ],
            "add" : {
              "x-fapi-interaction-id" : [ "${attributes.xfapiinteractionid != null ?  attributes.xfapiinteractionid : (context.id).substring(0,36)}" ],
              "Content-Type" : [ "application/json" ]
            }
          }
        },
        {
          "name" : "ErrorResponseSwitch",
          "type" : "SwitchFilter",
          "config" : {
            "onResponse" : [ {
              "condition" : "${response.status.code == 400}",
              "handler" : {
                "name" : "FilterFailureHandler-400",
                "type" : "StaticResponseHandler",
                "config" : {
                  "status" : 400,
                  "reason" : "Bad Request",
                  "entity" : "${attributes.error400}"
                }
              }
            }, {
              "condition" : "${response.status.code == 401}",
              "handler" : {
                "name" : "FilterFailureHandler-401",
                "type" : "StaticResponseHandler",
                "config" : {
                  "status" : 401,
                  "reason" : "Unauthorized",
                  "entity" : "${attributes.error401}"
                }
              }
            }, {
              "condition" : "${response.status.code == 403}",
              "handler" : {
                "name" : "FilterFailureHandler-403",
                "type" : "StaticResponseHandler",
                "config" : {
                  "status" : 403,
                  "reason" : "Forbidden",
                  "entity" : "${attributes.error403}"
                }
              }
            }, {
              "condition" : "${response.status.code == 404}",
              "handler" : {
                "name" : "FilterFailureHandler-404",
                "type" : "StaticResponseHandler",
                "config" : {
                  "status" : 404,
                  "reason" : "Not Found",
                  "entity" : "${attributes.error404}"
                }
              }
            }, {
              "condition" : "${response.status.code == 500}",
              "handler" : {
                "name" : "FilterFailureHandler-500",
                "type" : "StaticResponseHandler",
                "config" : {
                  "status" : 500,
                  "reason" : "Internal Server Error",
                  "entity" : "${attributes.error500}"
                }
              }
            } ]
          }
        }, {
          "name" : "AssignmentFilter-ErrorHandling",
          "type" : "AssignmentFilter",
          "config" : {
            "onResponse" : [ {
              "target" : "${attributes.error400}",
              "value" : "${toString('{\"Code\":\"400 BadRequest\",\"Id\":\"').concat(request.headers['x-request-id'][0]).concat('\",\"Message\":\"Invalid request parameters.\",\"Errors\":[{\"ErrorCode\":\"UK.OBIE.Bad.Request\",\"Message\":\"Invalid request parameters.\",\"Path\":\"\",\"Url\":\"').concat(request.uri.path).concat('\"}]}')}"
            }, {
              "target" : "${attributes.error401}",
              "value" : "${toString('{\"status\":\"401\",\"error\":\"Unauthorized\",\"message\":\"Unauthorized\",\"path\":\"').concat(request.uri.path).concat('\"}')}"
            }, {
              "target" : "${attributes.error403}",
              "value" : "${toString('{\"status\":\"403\",\"error\":\"Forbidden\",\"message\":\"Forbidden\",\"path\":\"').concat(request.uri.path).concat('\"}')}"
            }, {
              "target" : "${attributes.error404}",
              "value" : "${toString('{\"Code\":\"404 Not Found\",\"Id\":\"').concat(request.headers['x-request-id'][0]).concat('\",\"Message\":\"Resource Not Found.\",\"Errors\":[{\"ErrorCode\":\"UK.OBIE.NotFound\",\"Message\":\"Not Found.\",\"Path\":\"\",\"Url\":\"').concat(request.uri.path).concat('\"}]}')}"
            }, {
              "target" : "${attributes.error500}",
              "value" : "${toString('{\"Code\":\"500 Internal Server Error\",\"Id\":\"').concat(request.headers['x-request-id'][0]).concat('\",\"Message\":\"Internal Server Error.\",\"Errors\":[{\"ErrorCode\":\"UK.OBIE.UnexpectedError\",\"Message\":\"Unexpected Error.\",\"Path\":\"\",\"Url\":\"').concat(request.uri.path).concat('\"}]}')}"
            } ]
          }
        },

        {
          "name" : "CertificateExtensionValidatorFilter",
          "type" : "CertificateExtensionValidatorFilter",
          "config" : {
            "routeRole" : "Account Information",
            "clientCertificateHeaderName" : "ssl-client-cert"
          }
        },
        {
          "name": "CertificateThumbprintFilter-1",
          "type": "CertificateThumbprintFilter",
          "config": {
            "certificate": "${pemCertificate(urlDecode(request.headers['ssl-client-cert'][0]))}",
            "failureHandler": {
              "type": "ScriptableHandler",
              "config": {
                "type": "application/x-groovy",
                "source": [
                  "def response = new Response(Status.TEAPOT);",
                  "response.entity = 'Failure in CertificateThumbprintFilter'",
                  "return response"
                ]
              }
            }
          }
        },
        {
          "name" : "OAuth2ResourceServerFilter-OB",
          "type" : "OAuth2ResourceServerFilter",
          "config" : {
            "scopes" : [ "accounts" ],
            "requireHttps" : false,
            "realm" : "OpenIG",
            "accessTokenResolver" : {
              "type": "ConfirmationKeyVerifierAccessTokenResolver",
              "config": {
                "delegate": {
                  "name": "token-resolver-1",
                  "type": "TokenIntrospectionAccessTokenResolver",
                  "config": {
                    "endpoint": "https://&{am.server.fqdn}/am/oauth2/introspect",
                    "providerHandler": {
                      "type": "Chain",
                      "config": {
                        "filters": [
                          {
                            "type": "HttpBasicAuthenticationClientFilter",
                            "config": {
                              "username": "ig-agent",
                              "passwordSecretId": "agent.secret.id",
                              "secretsProvider": {
                                "type": "Base64EncodedSecretStore",
                                "config": {
                                  "secrets": {
                                    "agent.secret.id": "cGFzc3dvcmQ="
                                  }
                                }
                              }
                            }
                          }
                        ],
                        "handler": "ForgeRockClientHandler"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "ProcessAccountConsent",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ProcessAccountConsent.groovy",
            "args": {
              "objAccountConsent": "ObAccountAccess",
              "objTpp": "obTpp",
              "tppClientId" : "${contexts.oauth2.accessToken.info.client_id}"
            }
          }
        },
        {
          "name" : "HeaderFilter-ChangeHostToIDM",
          "type" : "HeaderFilter",
          "config" : {
            "messageType" : "REQUEST",
            "remove" : [ "host" ]
          }
        },
        {
          "type": "ClientCredentialsOAuth2ClientFilter",
          "config": {
            "clientId": "ig-client",
            "clientSecretId": "client.secret.id",
            "secretsProvider": {
              "type": "Base64EncodedSecretStore",
              "config": {
                "secrets": {
                  "client.secret.id": "cGFzc3dvcmQ="
                }
              }
            },
            "tokenEndpoint": "https://&{am.server.fqdn}/am/oauth2/realms/root/realms/openbanking/access_token",
            "scopes" : ["fr:idm:*"]
          }
        }
      ],
      "handler": {
        "type": "ScriptableHandler",
        "config": {
          "type": "application/x-groovy",
          "clientHandler": {
            "type": "Chain",
            "capture": "all",
            "config": {
              "filters": [
                {
                  "type": "ClientCredentialsOAuth2ClientFilter",
                  "config": {
                    "clientId": "ig-client",
                    "clientSecretId": "client.secret.id",
                    "secretsProvider": {
                      "type": "Base64EncodedSecretStore",
                      "config": {
                        "secrets": {
                          "client.secret.id": "cGFzc3dvcmQ="
                        }
                      }
                    },
                    "tokenEndpoint": "https://&{am.server.fqdn}/am/oauth2/realms/root/realms/openbanking/access_token",
                    "scopes": [
                      "fr:idm:*"
                    ]
                  }
                }
              ],
              "handler": "ForgeRockClientHandler"
            }
          },
          "source": [
            "return http.send(context, request);"
          ]
        }
      }
    }
  }
} 
