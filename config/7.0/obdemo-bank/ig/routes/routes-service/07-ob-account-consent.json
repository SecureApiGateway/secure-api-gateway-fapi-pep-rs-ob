{
  "name" : "OB RS Account Consent",
  "baseURI" : "https://&{iam.fqdn}",
  "condition" : "${matches(request.uri.path, '^/rs/openbanking/v3.1/account-access-consents')}",
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "name" : "HeaderFilter-AddResponseHeaders",
          "type" : "HeaderFilter",
          "config" : {
            "messageType" : "RESPONSE",
            "remove" : [ "Location", "Set-Cookie", "Server", "Strict-Transport-Security" ],
            "add" : {
              "x-fapi-interaction-id" : [ "${attributes.xfapiinteractionid != null ?  attributes.xfapiinteractionid : (context.id).substring(0,36)}" ],
              "Content-Type" : [ "application/json" ]
            }
          }
        },
        {
          "name" : "CertificateExtensionValidatorFilter",
          "type" : "CertificateExtensionValidatorFilter",
          "config" : {
            "routeRole" : "Account Information",
            "clientCertificateHeaderName" : "ssl-client-cert"
          }
        },
        {
          "name": "CertificateThumbprintFilter-1",
          "type": "CertificateThumbprintFilter",
          "config": {
            "certificate": "${pemCertificate(urlDecode(request.headers['ssl-client-cert'][0]))}",
            "failureHandler": {
              "type": "ScriptableHandler",
              "config": {
                "type": "application/x-groovy",
                "source": [
                  "def response = new Response(Status.TEAPOT);",
                  "response.entity = 'Failure in CertificateThumbprintFilter'",
                  "return response"
                ]
              }
            }
          }
        },
        {
          "name" : "OAuth2ResourceServerFilter-OB",
          "type" : "OAuth2ResourceServerFilter",
          "config" : {
            "scopes" : [ "accounts" ],
            "requireHttps" : false,
            "realm" : "OpenIG",
            "accessTokenResolver" : {
              "type": "ConfirmationKeyVerifierAccessTokenResolver",
              "config": {
                "delegate": {
                  "name": "token-resolver-1",
                  "type": "TokenIntrospectionAccessTokenResolver",
                  "config": {
                    "endpoint": "https://&{iam.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/introspect",
                    "providerHandler": {
                      "type": "Chain",
                      "config": {
                        "filters": [
                          {
                            "type": "HttpBasicAuthenticationClientFilter",
                            "config": {
                              "username": "&{ig.agent.id}",
                              "passwordSecretId": "ig.agent.password",
                              "secretsProvider": "SystemAndEnvSecretStore-IAM"
                            }
                          }
                        ],
                        "handler": "ForgeRockClientHandler"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "ProcessAccountConsent",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ProcessAccountConsent.groovy",
            "args": {
              "objAccountConsent": "ObAccountAccess",
              "objTpp": "obTpp",
              "tppClientId" : "${contexts.oauth2.accessToken.info.client_id}"
            }
          }
        },
        {
          "name" : "HeaderFilter-ChangeHostToIDM",
          "type" : "HeaderFilter",
          "config" : {
            "messageType" : "REQUEST",
            "remove" : [ "host" ]
          }
        },
        {
          "type": "ClientCredentialsOAuth2ClientFilter",
          "config": {
            "clientId": "&{ig.client.id}",
            "clientSecretId": "ig.client.secret",
            "secretsProvider": "SystemAndEnvSecretStore-IAM",
            "tokenEndpoint": "https://&{iam.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/access_token",
            "scopes": [
              "fr:idm:*"
            ],
            "handler": "TokenRequestHandler"
          }
        }
      ],
      "handler": "ReverseProxyHandler"
    }
  }
} 
