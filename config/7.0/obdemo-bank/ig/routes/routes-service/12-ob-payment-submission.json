{
  "name" : "OB Payment Submission",
  "auditService": "AuditService-OB-Route",
  "baseURI" : "&{rs.url}",
  "condition" : "${matches(request.uri.path, '^/rs/open-banking/v3.1.*/domestic-payments$')}",
  "heap": [
    {
      "name": "JwkSetSecretStore-ApiClientJwks",
      "type": "JwkSetSecretStore",
      "config": {
        "jwkUrl": "https://&{iam.fqdn}/openidm/endpoint/apiclientjwks",
        "handler": "IDMClientHandler"
      }
    }
  ],
  "capture" : [ "response", "request" ],
  "handler" : {
    "type" : "Chain",
    "config" : {
      "filters" : [
        {
          "name": "AddDetachedSig",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "AddDetachedSig.groovy",
            "args": {
              "routeArgHeaderName": "x-jws-signature",
              "routeArgAlgorithm": "PS256",
              "routeArgSecretId": "&{aspsp.jwtsigner.alias}",
              "routeArgKid": "&{aspsp.jwtsigner.kid}",
              "routeArgSecretsProvider": "${heap['SecretsProvider-ASPSP']}"
            }
          }
        },
        {
          "name": "ObResponseCheck",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ObResponseCheck.groovy"
          }
        },
        {
          "name": "ParseCertificate",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ParseCertificate.groovy",
            "args": {
              "routeArgCertificateHeader": "ssl-client-cert"
            }
          }
        },
        {
          "name" : "CertificateRoleCheck",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "CertificateRoleCheck.groovy",
            "args": {
              "routeArgRole": "PISP"
            }
          }
        },
        {
          "name" : "OAuth2ResourceServerFilter-OBIE",
          "type" : "OAuth2ResourceServerFilter",
          "config" : {
            "scopes" : [ "payments", "openid" ],
            "requireHttps" : false,
            "realm" : "OpenIG",
            "accessTokenResolver" : {
              "type": "StatelessAccessTokenResolver",
              "config": {
                "secretsProvider": "SecretsProvider-AmJWK",
                "issuer": "https://&{iam.fqdn}/am/oauth2/realms/root/realms/&{am.realm}",
                "verificationSecretId": "any.value.in.regex.format"
              }

            }
          }
        },
        {
          "name": "ProcessDetachedSig",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ProcessDetachedSig.groovy",
            "clientHandler": "IDMClientHandler",
            "args": {
              "routeArgHeaderName": "x-jws-signature",
              "routeArgJwkUrl": "https://&{iam.fqdn}/openidm/endpoint/apiclientjwks"
            }
          }
        },
        {
          "type": "ConditionalFilter",
          "config": {
            "condition": "${attributes.encodedPayload == true}",
            "delegate": {
              "name": "JwtValidationFilter-Detached",
              "type": "JwtValidationFilter",
              "config": {
                "jwt": "${attributes.detachedJWT}",
                "verificationSecretId": "verify",
                "secretsProvider": {
                  "type": "SecretsProvider",
                  "config": {
                    "stores": [
                      {
                        "name": "JwkSetSecretStore-ApiClientJwks"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        {
          "type": "UriPathRewriteFilter",
          "config": {
            "mappings": {
              "/rs": "/"
            },
            "failureHandler": {
              "type": "StaticResponseHandler",
              "config": {
                "status": 500,
                "headers": {
                  "Content-Type": [
                    "text/plain"
                  ]
                },
                "entity": "Invalid URL produced"
              }
            }
          }
        },
        {
          "name": "EncodeInitiation",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "source": [
              "import groovy.json.JsonOutput",
              "import java.util.Base64",
              "def initiationRequest = Base64.getEncoder().encodeToString(JsonOutput.toJson(request.entity.getJson().Data.Initiation).bytes)",
              "logger.debug('request ' + initiationRequest)",
              "attributes.put('initiationRequest',initiationRequest)",
              "next.handle(context, request)"
            ]

          }
        },
        {
          "name" : "PolicyEnforcementFilter-OBIE Assets Authorization Filter",
          "type" : "PolicyEnforcementFilter",
          "config" : {
            "pepRealm" : "/&{am.realm}",
            "application" : "Open Banking",
            "claimsSubject" : {
              "sub": "${contexts.oauth2.accessToken.info.sub}",
              "intent_type": "pisp"
            },
            "environment": {
              "sub": [ "${contexts.oauth2.accessToken.info.sub}" ],
              "tpp_client_id" : [ "${contexts.oauth2.accessToken.info.aud}" ],
              "tpp_cert_id" : [ "${attributes.tppId}" ],
              "intent_id": [ "${toJson(contexts.oauth2.accessToken.info.claims).id_token.openbanking_intent_id.value}" ],
              "initiation" : [ "${attributes.initiationRequest}"]
            },
            "amService" : "AmService-OBIE"
          }
        },
        {
          "name": "TranslatePaymentResource",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "TranslatePaymentResource.groovy",
            "args": {
              "accounts": "${contexts.jwtBuilder.value}"
            }
          }
        },
        {
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "AuditConsent.groovy",
            "args": {
              "auditService": "${heap['AuditService-OB-Consent']}",
              "clock": "${heap['Clock']}",
              "consentIdLocator": "response.entity.getJson().Data.ConsentId",
              "role": "PISP",
              "event": "EXEC"
            }
          }
        }
      ],
      "handler" : "ReverseProxyHandler"
    }
  }
}