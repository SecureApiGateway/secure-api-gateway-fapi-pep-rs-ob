{
  "name": "30 - Open Banking RS Payment Consent Funds Confirmation",
  "auditService": "AuditService-OB-Route",
  "baseURI" : "https://&{rs.fqdn}",
  "condition": "${matches(request.uri.path, '^/rs/open-banking/v(\\\\d+.)?(\\\\d+.)?(\\\\*|\\\\d+)/pisp/domestic-payment-consents/.*/funds-confirmation$')}",
  "capture": [
    "response",
    "request"
  ],
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "comment": "Add a detached signature to the response",
          "name": "AddDetachedSig",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "AddDetachedSig.groovy",
            "args": {
              "routeArgHeaderName": "x-jws-signature",
              "routeArgAlgorithm": "PS256",
              "routeArgSecretId": "&{aspsp.jwtsigner.alias}",
              "routeArgKid": "&{aspsp.jwtsigner.kid}",
              "routeArgSecretsProvider": "${heap['SecretsProvider-ASPSP']}",
              "routeArgTrustedAnchor": "openbanking.org.uk"
            }
          }
        },
        {
          "comment": "Ensure the response is Open Banking compliant",
          "name": "ObResponseCheck",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ObResponseCheck.groovy"
          }
        },
        {
          "comment": "Extract client certificate details",
          "name": "ParseCertificate",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ParseCertificate.groovy",
            "args": {
              "routeArgCertificateHeader": "ssl-client-cert"
            }
          }
        },
        {
          "comment": "Ensure client certificate includes PISP role",
          "name": "CertificateRoleCheck",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "CertificateRoleCheck.groovy",
            "args": {
              "routeArgRole": "PISP"
            }
          }
        },
        {
          "comment": "Check incoming access token",
          "name": "OAuth2ResourceServerFilter-OBIE",
          "type": "OAuth2ResourceServerFilter",
          "config": {
            "scopes": [
              "payments",
              "openid"
            ],
            "requireHttps": false,
            "realm": "OpenIG",
            "accessTokenResolver": {
              "type": "StatelessAccessTokenResolver",
              "config": {
                "secretsProvider": "SecretsProvider-AmJWK",
                "issuer": "https://&{identity.platform.fqdn}/am/oauth2/realms/root/realms/&{am.realm}",
                "verificationSecretId": "any.value.in.regex.format"
              }
            }
          }
        },
        {
          "comment": "Check grant type",
          "name": "Grant Type Verifier",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "GrantTypeVerifier.groovy",
            "args": {
              "allowedGrantType": "authorization_code"
            }
          }
        },
        {
          "comment": "Adjust URL for downstream resource server",
          "type": "UriPathRewriteFilter",
          "config": {
            "mappings": {
              "/rs": "/"
            },
            "failureHandler": {
              "type": "StaticResponseHandler",
              "config": {
                "status": 500,
                "headers": {
                  "Content-Type": [
                    "text/plain"
                  ]
                },
                "entity": "Invalid URL produced"
              }
            }
          }
        },
        {
          "comment": "Fetch Open Banking consent from IDM to get the resource owner id",
          "name": "GetResourceOwnerIdFromConsent",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "GetResourceOwnerIdFromConsent.groovy",
            "clientHandler": "IDMClientHandler",
            "args": {
              "routeArgIdmBaseUri": "https://&{identity.platform.fqdn}",
              "routeArgObjUser": "&{user.object}"
            }
          }
        },
        {
          "comment": "Check payment request against authorised consent, via AM policy engine",
          "name": "PolicyEnforcementFilter-OBIE Assets Authorization Filter",
          "type": "PolicyEnforcementFilter",
          "config": {
            "pepRealm": "/&{am.realm}",
            "application": "Open Banking",
            "claimsSubject": {
              "sub": "${attributes.resourceOwnerUsername}",
              "intent_type": "pisp"
            },
            "environment": {
              "sub": [
                "${contexts.oauth2.accessToken.info.sub}"
              ],
              "tpp_client_id": [
                "${contexts.oauth2.accessToken.info.aud}"
              ],
              "tpp_cert_id": [
                "${attributes.tppId}"
              ],
              "intent_id": [
                "${split(request.uri.path, '/')[5]}"
              ],
              "request_method": [
                "${request.method}"
              ]
            },
            "amService": "AmService-OBIE"
          }
        },
        {
          "comment": "Adjust URL for downstream resource server",
          "name": "TranslateDomesticPaymentFundsConfirmationResource",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "TranslatePaymentFundsConfirmationResource.groovy",
            "args": {
              "routeArgAmountQueryParameter": "amount",
              "routeArgVersionQueryParameter": "version"
            }
          }
        },
        {
          "comment": "Prepare consent audit trail",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "AuditConsent.groovy",
            "args": {
              "auditService": "${heap['AuditService-OB-Consent']}",
              "clock": "${heap['Clock']}",
              "consentIdLocator": "response.entity.getJson().Data.ConsentId",
              "role": "PISP",
              "event": "EXEC"
            }
          }
        },
        {
          "comment": "Add host header for downstream resource server",
          "name": "HeaderFilter-ChangeHostToRS",
          "type": "HeaderFilter",
          "config": {
            "messageType": "REQUEST",
            "remove": [
              "host",
              "X-Forwarded-Host"
            ],
            "add": {
              "X-Forwarded-Host": [
                "rs.dev.forgerock.financial"
              ]
            }
          }
        }
      ],
      "handler": "ReverseProxyHandler"
    }
  }
}