{
  "comment": "TPP dynamic registration",
  "name": "03 - Open Banking Register TPP",
  "auditService": "AuditService-OB-Route",
  "baseURI": "https://&{identity.platform.fqdn}",
  "condition": "${matches(request.uri.path, '^/am/oauth2/realms/root/realms/&{am.realm}/register')}",
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "comment": "Enforce response content type as application/json",
          "name": "HeaderFilter-AddResponseHeaders",
          "type": "HeaderFilter",
          "config": {
            "messageType": "REQUEST",
            "remove": [
              "Content-Type"
            ],
            "add": {
              "Content-Type": [
                "application/json"
              ]
            }
          }
        },
        {
          "comment": "Extract MTLS client certificate details",
          "name": "ParseCertificate",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ParseCertificate.groovy",
            "args": {
              "routeArgCertificateHeader": "ssl-client-cert"
            }
          }
        },
        {
          "comment": "Pre process registration request",
          "name": "ProcessRegistration",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ProcessRegistration.groovy",
            "args": {
              "comment": "TODO: use env variable",
              "routeArgObJwksHosts": "[\"keystore.openbankingtest.org.uk\"]",
              "routeArgProxyBaseUrl": "https://&{ig.fqdn}/jwkms/jwksproxy",
              "jwkSetService": "${heap['OBJwkSetService']}"
            }
          }
        },
        {
          "comment": "Verify SSA signature (AM can't process non-conformant OB SSAs)",
          "name": "SSAVerifier",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "SSAVerifier.groovy",
            "clientHandler": "OBClientHandler",
            "args": {
              "routeArgSSAIssuerJwksUrls": {
                "OpenBanking Ltd": "https://keystore.openbankingtest.org.uk/keystore/openbanking.jwks",
                "test-publisher": "https://&{ig.fqdn}/jwkms/apiclient/jwks"
              }
            }
          }
        },
        {
          "comment": "Register TPP org and OAuth2 client in IDM or delete from IDM",
          "name": "CreateApiClient",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "CreateApiClient.groovy",
            "args": {
              "routeArgIdmBaseUri": "https://&{identity.platform.fqdn}",
              "routeArgObjApiClientOrg": "apiClientOrg",
              "routeArgObjApiClient": "apiClient"
            },
            "clientHandler": "IDMClientHandler"
          }
        },
        {
          "comment": "Set Host header for downstream",
          "name" : "HeaderFilter-ChangeHostToIAM",
          "type" : "HeaderFilter",
          "config" : {
            "messageType" : "REQUEST",
            "remove" : [ "host", "X-Forwarded-Host" ],
            "add" : {
              "X-Forwarded-Host" : [ "&{identity.platform.fqdn}" ]
            }
          }
        },
        {
          "comment": "Fetch access token for dynamic client registration",
          "type": "ClientCredentialsOAuth2ClientFilter",
          "config": {
            "clientId": "&{ig.client.id}",
            "clientSecretId": "ig.client.secret",
            "secretsProvider": "SystemAndEnvSecretStore-IAM",
            "tokenEndpoint": "https://&{identity.platform.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/access_token",
            "scopes": [
              "dynamic_client_registration fr:idm:*"
            ],
            "handler": "TokenRequestHandler"
          }
        }
      ],
      "handler": "ReverseProxyHandler"
      }

  }
}
