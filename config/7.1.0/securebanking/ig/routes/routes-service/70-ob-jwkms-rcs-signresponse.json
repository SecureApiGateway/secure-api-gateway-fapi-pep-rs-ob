{
  "comment": "70 - Signing service for Remote Consent service, used to sign responses with RCS registered key",
  "name": "70 - OB JWKMS",
  "auditService": "AuditService-OB-Route",
  "condition": "${matches(request.uri.path, '^/jwkms/rcs/signresponse')}",
  "heap": [
    {
      "name": "SecretKeyPropertyFormat-RCS",
      "type": "SecretKeyPropertyFormat",
      "config": {
        "format": "PLAIN",
        "algorithm": "AES"
      }
    },
    {
      "name": "SystemAndEnvSecretStore-RCS",
      "type": "SystemAndEnvSecretStore",
      "config": {
        "mappings": [
          {
            "secretId": "ig.rcs.secret",
            "format": "SecretKeyPropertyFormat-RCS"
          }
        ]
      }
    }
  ],
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        "SBATFapiInteractionFilterChain",
        {
          "comment": "Prepare JWT payload",
          "name": "JwkmsProcessRequest",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "JwkmsProcessRCSClaims.groovy",
            "args": {
              "routeArgJwtIssuer": "secure-open-banking-rcs",
              "routeArgJwtValidity": 300
            }
          }
        },
        {
          "comment": "Sign JWT with Remote Consent Service key",
          "name": "JwtBuilderFilter-JWKMS",
          "type": "JwtBuilderFilter",
          "config": {
            "template": "${attributes.processedPayload}",
            "secretsProvider": "TestDirectorySigningKeyStore",
            "signature": {
              "secretId": "jwt.signer",
              "algorithm": "PS256"
            }
          }
        }
      ],
      "handler": {
        "comment": "Set content type to text/plan for JWT",
        "type": "ScriptableHandler",
        "config": {
          "type": "application/x-groovy",
          "file": "SetContentTypeToPlainText.groovy"
        }
      }
    }
  }
}