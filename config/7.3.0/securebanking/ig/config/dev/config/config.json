{
  "properties": {
    "jwtValidation": {
      "clockSkewAllowanceDuration": "5 seconds"
    },
    "urls": {
      "idmBaseUri": "https://&{identity.platform.fqdn}/openidm",
      "rsBaseUri": "http://&{rs.internal.svc}:8080"
    },
    "hosts": {
      "obJwks": "&{ig.ob.jwks.host|keystore.openbankingtest.org.uk}"
    },
    "vertxConfig": {
      "maxHeaderSize": 16384,
      "initialSettings": {
        "maxHeaderListSize": 16384
      }
    }
  },
  "handler": "_router",
  "heap": [
    {
      "name": "_router",
      "type": "Router",
      "config": {
        "scanInterval": "30 seconds",
        "directory": "${openig.configDirectory}/routes",
        "defaultHandler": {
          "type": "DispatchHandler",
          "config": {
            "bindings": [
              {
                "condition": "${request.method == 'GET' and request.uri.path == '/'}",
                "handler": {
                  "type": "WelcomeHandler"
                }
              },
              {
                "condition": "${request.uri.path == '/'}",
                "handler": {
                  "type": "StaticResponseHandler",
                  "config": {
                    "status": 405,
                    "reason": "Method Not Allowed"
                  }
                }
              },
              {
                "handler": {
                  "type": "StaticResponseHandler",
                  "config": {
                    "status": 404,
                    "reason": "Not Found"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "capture",
      "type": "CaptureDecorator",
      "config": {
        "captureEntity": true
      }
    },
    {
      "name": "fapiAuditService",
      "type": "AuditService",
      "config": {
        "eventHandlers": [
          {
            "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
            "config": {
              "name": "jsonstdout",
              "elasticsearchCompatible": false,
              "topics": [
                "fapi"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "ReverseProxyHandler",
      "type": "ReverseProxyHandler",
      "capture": [
        "request",
        "response"
      ],
      "config": {
        "vertx": "${vertxConfig}"
      }
    },
    {
      "name": "JwtSession",
      "type": "JwtSession"
    },
    {
      "name": "FAPIRSFilterChain",
      "type": "ChainOfFilters",
      "config": {
        "filters": [
          {
            "comment": "Dev filter to log access to the route",
            "name": "RouteAccessLog",
            "type": "ScriptableFilter",
            "config": {
              "type": "application/x-groovy",
              "source": [
                "import org.forgerock.openig.handler.router.RoutingContext",
                "import org.forgerock.http.protocol.Header",
                "import static org.forgerock.json.JsonValue.json",
                "import static org.forgerock.json.JsonValue.object",
                "import static org.forgerock.json.JsonValue.field",
                "JsonValue debug = json(object(",
                "    field(\"routeId\", context.asContext(RoutingContext.class).getRouteId()), ",
                "    field(\"URI\", request.getUri()), ",
                "    field(\"referrer\", request.getHeaders().getFirst(\"Referrer\")), ",
                "    field(\"x-fapi-interaction-id\", request.getHeaders().getFirst(\"x-fapi-interaction-id\"))))",
                "logger.debug(\"[RouteAccessLog] ENTER: {}\", debug)",
                "next.handle(context, request)",
                "    .then({ response ->",
                "      logger.debug(\"[RouteAccessLog] EXIT: routeId={}\", context.asContext(RoutingContext.class).getRouteId())",
                "      //response.getEntity().setJson(debug)",
                "      return response",
                "  })"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "SystemAndEnvSecretStore-IAM",
      "type": "SystemAndEnvSecretStore",
      "config": {
        "format": "PLAIN"
      }
    },
    {
      "name": "IDMClientHandler",
      "type": "Chain",
      "config": {
        "filters": [
          {
            "type": "ClientCredentialsOAuth2ClientFilter",
            "config":{
              "tokenEndpoint": "https://&{identity.platform.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/access_token",
              "scopes": [
                "fr:idm:*"
              ],
              "endpointHandler": {
                "type": "Chain",
                "config": {
                  "handler": "ForgeRockClientHandler",
                  "filters": [
                    {
                      "type": "ClientSecretPostAuthenticationFilter",
                      "config": {
                        "clientId": "fapi-rs-ig-client",
                        "clientSecretId": "ig.rs.idm.client.secret",
                        "secretsProvider": "SystemAndEnvSecretStore-IAM"
                      }
                    }
                  ]
                }
              }
            }
          }
        ],
        "handler": "ForgeRockClientHandler"
      }
    },
    {
      "name": "TrustManager-OB",
      "type": "TrustManager",
      "config": {
        "keystore": {
          "type": "KeyStore",
          "config": {
            "url": "file://&{ig.instance.dir}&{ig.truststore.path}",
            "type": "PKCS12",
            "passwordSecretId": "ig.truststore.password",
            "secretsProvider": "SystemAndEnvSecretStore-IAM"
          }
        }
      }
    },
    {
      "name": "OBClientHandler",
      "type": "ClientHandler",
      "capture": "all",
      "config": {
        "tls": {
          "type": "ClientTlsOptions",
          "config": {
            "trustManager": "TrustManager-OB"
          }
        }
      }
    },
    {
      "name": "JwkSetService",
      "type": "CachingJwkSetService",
      "config": {
        "endpointHandler": "OBClientHandler",
        "maxCacheEntries": 500,
        "expireAfterWriteDuration": "24 hours"
      }
    },
    {
      "name": "SecretsProvider-AmJWK",
      "type": "SecretsProvider",
      "config": {
        "stores": [
          {
            "type": "JwkSetSecretStore",
            "config": {
              "jwkUrl": "https://&{identity.platform.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/connect/jwk_uri"
            }
          }
        ]
      }
    },
    {
      "name": "IdmService",
      "type": "IdmService",
      "config": {
        "baseEndpoint": "&{urls.idmBaseUri}",
        "endpointHandler": "IDMClientHandler"
      }
    },
    {
      "name": "IdmApiClientService",
      "type": "IdmApiClientService",
      "config": {
        "idmService": "IdmService",
        "jwkSetService": "JwkSetService"
      }
    },
    {
      "name": "CompactSerializationJwsSigner-RSASSA-PSS",
      "type": "CompactSerializationJwsSigner",
      "config": {
        "algorithm": "PS256",
        "signingKeyId": "jwt.signer",
        "kid": "&{ig.ob.aspsp.signing.kid}",
        "secretsProvider": "SecretsProvider-ASPSP"
      }
    },
    {
      "name": "SecretsProvider-ASPSP",
      "type": "SecretsProvider",
      "config": {
        "stores": [
          {
            "name": "KeyStoreSecretStore-ASPSP",
            "type": "KeyStoreSecretStore",
            "config": {
              "file": "&{ig.instance.dir}&{ig.ob.aspsp.signing.keystore.path}",
              "storeType": "&{ig.ob.aspsp.signing.keystore.type}",
              "storePasswordSecretId": "ig.ob.aspsp.signing.keystore.storepass",
              "entryPasswordSecretId": "ig.ob.aspsp.signing.keystore.keypass",
              "secretsProvider": "SystemAndEnvSecretStore-IAM",
              "mappings": [
                {
                  "secretId": "jwt.signer",
                  "aliases": ["&{ig.ob.aspsp.signing.keystore.alias}"]
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "AuditService-OB-Route",
      "type": "AuditService",
      "config": {
        "config": {
          "filterPolicies": {
            "field": {
              "includeIf": [
                "/access/http/request/headers/x-fapi-interaction-id"
              ]
            }
          }
        },
        "eventHandlers": [
          {
            "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
            "config": {
              "name": "jsonstdout",
              "elasticsearchCompatible": false,
              "topics": [
                "access"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "AuditService-OB-Consent",
      "type": "AuditService",
      "config": {
        "config": {
        },
        "eventHandlers": [
          {
            "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
            "config": {
              "name": "jsonstdout",
              "elasticsearchCompatible": false,
              "topics": [
                "ObConsentTopic"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "FRReverseProxyHandler",
      "comment": "ReverseProxyHandler for calls to the FR services",
      "type": "Chain",
      "config": {
        "filters": [
          "TransactionIdOutboundFilter"
        ],
        "handler": "ReverseProxyHandler"
      }
    },
    {
      "name": "AmService",
      "type": "AmService",
      "config": {
        "url": "https://&{identity.platform.fqdn}/am",
        "realm": "/&{am.realm}",
        "agent": {
          "username": "ig-agent",
          "passwordSecretId": "ig.agent.password"
        },
        "secretsProvider": "SystemAndEnvSecretStore-IAM",
        "sessionCache": {
          "enabled": false
        },
        "notifications": {
          "enabled": false
        }
      }
    }
  ],
  "monitor": true
}
