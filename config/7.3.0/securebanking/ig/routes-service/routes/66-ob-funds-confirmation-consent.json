{
  "name": "66 - Open Banking RS Funds confirmation Consent",
  "auditService": "AuditService-OB-Route",
  "baseURI": "${urls.rsBaseUri}",
  "condition": "${find(request.uri.path, '^/rs/open-banking/v(\\\\d+.)?(\\\\d+.)?(\\\\*|\\\\d+)/cbpii/funds-confirmation-consents')}",
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "comment": "FAPI Resource Filter Chain",
          "name": "fapiResourceFilterChain",
          "type": "FapiResourceFilterChain",
          "config": {
            "auditService": "fapiAuditService",
            "clientCertificate": "${pemCertificate(urlDecode(request.headers['ssl-client-cert'][0]))}",
            "scopes": [
              "fundsconfirmations"
            ],
            "allowedGrantType": "client_credentials",
            "realm": "OpenIG",
            "accessTokenResolver": {
              "name": "token-resolver",
              "type": "StatelessAccessTokenResolver",
              "config": {
                "secretsProvider": "SecretsProvider-AmJWK",
                "issuer": "https://&{as.fqdn}/am/oauth2/realms/root/realms/&{am.realm}",
                "verificationSecretId": "any.value.in.regex.format"
              }
            },
            "apiClientService": "IdmApiClientService"
          }
        },
        "FAPIRSFilterChain",
        {
          "comment": "Ensure OB compliant response",
          "name": "ObResponseCheck",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ObResponseCheck.groovy"
          }
        },
        {
          "comment": "Ensure ApiClient includes CBPII role",
          "name": "ApiClientRoleCheck",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ApiClientRoleCheck.groovy",
            "args": {
              "routeArgRole": "CBPII"
            }
          }
        },
        {
          "comment": "Prepare audit trail for consent",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "AuditConsent.groovy",
            "args": {
              "auditService": "${heap['AuditService-OB-Consent']}",
              "clock": "${heap['Clock']}",
              "consentIdLocator": "response.entity.getJson().Data.ConsentId",
              "role": "CBPII",
              "event": "CREATE"
            }
          }
        },
        {
          "comment": "Adjust URL for downstream resource server",
          "type": "UriPathRewriteFilter",
          "config": {
            "mappings": {
              "/rs": "/"
            },
            "failureHandler": {
              "type": "StaticResponseHandler",
              "config": {
                "status": 500,
                "headers": {
                  "Content-Type": [
                    "text/plain"
                  ]
                },
                "entity": "Invalid URL produced"
              }
            }
          }
        },
        {
          "comment": "Add headers required by RS",
          "name": "HeaderFilter-RS",
          "type": "HeaderFilter",
          "config": {
            "messageType": "REQUEST",
            "remove": [
              "host",
              "X-Forwarded-Host",
              "X-Forwarded-Prefix",
              "x-api-client-id"
            ],
            "add": {
              "x-api-client-id": [
                "${contexts.oauth2.accessToken.info.sub}"
              ],
              "X-Forwarded-Host": [
                "&{rs.mtls.fqdn}"
              ],
              "X-Forwarded-Prefix": [
                "/rs"
              ]
            }
          }
        }
      ],
      "handler": "FRReverseProxyHandler"
    }
  }
}