{
  "name": "48 - Open Banking RS International Payment Funds Confirmation",
  "auditService": "AuditService-OB-Route",
  "baseURI": "${urls.rsBaseUri}",
  "condition": "${find(request.uri.path, '^/rs/open-banking/v(\\\\d+.)?(\\\\d+.)?(\\\\*|\\\\d+)/pisp/international-payment-consents/.*/funds-confirmation$')}",
  "capture": [
    "response",
    "request"
  ],
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "comment": "FAPI Resource Filter Chain",
          "name": "fapiResourceFilterChain",
          "type": "FapiResourceFilterChain",
          "config": {
            "auditService": "fapiAuditService",
            "clientCertificate": "${pemCertificate(urlDecode(request.headers['ssl-client-cert'][0]))}",
            "scopes": [
              "payments",
              "openid"
            ],
            "realm": "OpenIG",
            "accessTokenResolver": {
              "name": "token-resolver",
              "type": "StatelessAccessTokenResolver",
              "config": {
                "secretsProvider": "SecretsProvider-AmJWK",
                "issuer": "https://&{as.fqdn}/am/oauth2/realms/root/realms/&{am.realm}",
                "verificationSecretId": "any.value.in.regex.format"
              }
            },
            "apiClientService": "IdmApiClientService"
          }
        },
        "FAPIRSFilterChain",
        {
          "comment": "Add a detached signature to the response",
          "name": "AddDetachedSig",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "AddDetachedSig.groovy",
            "args": {
              "routeArgHeaderName": "x-jws-signature",
              "routeArgAlgorithm": "PS256",
              "routeArgSecretId": "jwt.signer",
              "routeArgKid": "&{ig.ob.aspsp.signing.kid}",
              "routeArgSecretsProvider": "${heap['SecretsProvider-ASPSP']}",
              "routeArgTrustedAnchor": "openbanking.org.uk",
              "obAspspOrgId": "&{ob.aspsp.org.id}"
            }
          }
        },
        {
          "comment": "Ensure the response is Open Banking compliant",
          "name": "ObResponseCheck",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ObResponseCheck.groovy"
          }
        },
        {
          "comment": "Ensure ApiClient includesPISP role",
          "name": "ApiClientRoleCheck",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "ApiClientRoleCheck.groovy",
            "args": {
              "routeArgRole": "PISP"
            }
          }
        },
        {
          "comment": "Adjust URL for downstream resource server",
          "type": "UriPathRewriteFilter",
          "config": {
            "mappings": {
              "/rs": "/"
            },
            "failureHandler": {
              "type": "StaticResponseHandler",
              "config": {
                "status": 500,
                "headers": {
                  "Content-Type": [
                    "text/plain"
                  ]
                },
                "entity": "Invalid URL produced"
              }
            }
          }
        },
        {
          "comment": "Gets the intent id from the access token claims and saves it on the attributes context",
          "name": "SaveIntentIdOnAttributesContext",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "SaveIntentIdOnAttributesContext.groovy"
          }
        },
        {
          "comment": "Check the consentId in the uri path matches the access_token",
          "name": "RequestPathConsentIdValidator",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "RequestPathConsentIdValidator.groovy",
            "args": {
              "routeArgConsentIdPathElementIndex": 4
            }
          }
        },
        {
          "comment": "Prepare consent audit trail",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "AuditConsent.groovy",
            "args": {
              "auditService": "${heap['AuditService-OB-Consent']}",
              "clock": "${heap['Clock']}",
              "consentIdLocator": "contexts.attributes.attributes.openbanking_intent_id",
              "role": "PISP",
              "event": "EXEC"
            }
          }
        },
        {
          "comment": "Add host header for downstream resource server",
          "name": "HeaderFilter-ChangeHostToRS",
          "type": "HeaderFilter",
          "config": {
            "messageType": "REQUEST",
            "remove": [
              "host",
              "X-Forwarded-Host",
              "X-Forwarded-Prefix",
              "x-api-client-id"
            ],
            "add": {
              "x-api-client-id": [
                "${contexts.oauth2.accessToken.info.aud}"
              ],
              "X-Forwarded-Host": [
                "&{rs.mtls.fqdn}"
              ],
              "X-Forwarded-Prefix": [
                "/rs"
              ]
            }
          }
        }
      ],
      "handler": "FRReverseProxyHandler"
    }
  }
}