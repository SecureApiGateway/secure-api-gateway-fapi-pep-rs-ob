# When K8S is upgraded to >= 1.14 - change the apiVersion to:
#apiVersion: networking.k8s.io/v1beta1
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-secret: $(NAMESPACE)/obri-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: optional_no_ca
    nginx.ingress.kubernetes.io/http2-max-field-size: 16k
    nginx.ingress.kubernetes.io/http2-max-header-size: 128k
    nginx.ingress.kubernetes.io/proxy-body-size: 64m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers: 4 256k
    nginx.ingress.kubernetes.io/proxy-busy-buffers_size: 256k
    nginx.ingress.kubernetes.io/error-log-level: "debug"
  name: forgerock
spec:
  rules:
  - host: $(FQDN)
    http:
      paths:
      - backend:
          serviceName: ig
          servicePort: 8080
        path: /am
      - backend:
          serviceName: ig
          servicePort: 8080
        path: /rcs-api
      - backend:
          serviceName: ig
          servicePort: 8080
          path: /rs
# Temporary - this will be internal
      - backend:
          serviceName: ig
          servicePort: 8080
        path: /repo
# Temporary - this will be internal
      - backend:
          serviceName: ig
          servicePort: 8080
        path: /jwkms
  tls:
  - hosts:
    - $(FQDN)
    secretName: sslcert
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ig-web
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"

spec:
  tls:
  - hosts:
    - $(FQDN)
    secretName: sslcert
  rules:
  - host: $(FQDN)
    http:
      paths:
      - backend:
          serviceName: ig
          servicePort: 8080
        path: /ig(/|$)(.*)
